{
  "hash": "50c1c8bc555132f8b1d71495c3923a0d",
  "result": {
    "markdown": "---\ntitle: Anomaly/Outlier detection\nauthor: Tahmina Sultana\ndate: '2023-11-20'\ncategories:\n  - python\n  - code\n  - analysis\nimage: outlier.png\ndescription: 'Anomaly detection in Machine Learning focuses on identifying rare or unusual instances in data that significantly differ from the majority of normal observations, aiding in the detection of outliers or irregular patterns.'\n---\n\n**Contents:**\n\n-   Introduction to Anomaly or Outlier Detection.\n\n-   Example of Anomaly or Outlier Detection manually created data.\n\n-   Example of Anomaly or Outlier Detection with real data [Credit Card](https://www.kaggle.com/datasets/hebaabdelhakam/credit-card) [dataset](https://www.kaggle.com/datasets/hebaabdelhakam/credit-card).\n\n-   Data Visualization\n\n-   Data processing\n\n-   Anomaly Detection\n\n-   Clustering Model implementation\n\n-   Evaluation metrics implementation\n\n#### **Anomaly or Outlier Detection**\n\nAnomaly Detection involves identifying uncommon occurrences within a dataset that stand out as statistically different from the majority of observations. These anomalies often indicate potential problems such as credit card fraud, server malfunctions, or cyber attacks.\n\nAnomalies fall into three primary categories:\n\n-   **Point Anomaly:** This occurs when a data point significantly deviates from the rest of the dataset.\n\n-   **Contextual Anomaly:** An observation is flagged as a Contextual Anomaly due to its abnormality within a specific context.\n\n-   **Collective Anomaly:** This involves a group of data instances that collectively indicate an anomaly.\n\nMachine Learning concepts are employed to perform anomaly detection using various approaches:\n\n-   **Supervised Anomaly Detection:** This method relies on labeled datasets containing both normal and anomalous samples. Predictive models, such as supervised Neural Networks, Support Vector Machines, or K-Nearest Neighbors Classifiers, are utilized to classify future data points.\n\n-   **Unsupervised Anomaly Detection:** This approach doesn't require labeled training data. It operates on the assumptions that only a small fraction of the data is anomalous and that anomalies significantly differ from normal samples. Unsupervised methods cluster data based on similarity measures, identifying data points that fall far from the established clusters as anomalies.\n\n**Anomaly Detection with manually generated data:**\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np \nfrom scipy import stats \nimport matplotlib.pyplot as plt \nimport matplotlib.font_manager \nfrom pyod.models.knn import KNN  \nfrom pyod.utils.data import generate_data, get_outliers_inliers \n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# generating a random dataset with two features \nX_train, y_train = generate_data(n_train = 300, train_only = True, \n                                                   n_features = 2) \n  \n# Setting the percentage of outliers \noutlier_fraction = 0.1\n  \n# Storing the outliers and inliners in different numpy arrays \nX_outliers, X_inliers = get_outliers_inliers(X_train, y_train) \nn_inliers = len(X_inliers) \nn_outliers = len(X_outliers) \n  \n# Separating the two features \nf1 = X_train[:, [0]].reshape(-1, 1) \nf2 = X_train[:, [1]].reshape(-1, 1) \n\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nxx, yy = np.meshgrid(np.linspace(-10, 10, 200), \n                     np.linspace(-10, 10, 200)) \n  \n# scatter plot \nplt.scatter(f1, f2) \nplt.xlabel('Feature 1') \nplt.ylabel('Feature 2') \n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nText(0, 0.5, 'Feature 2')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-2.png){width=587 height=429}\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nclf = KNN(contamination = outlier_fraction) \nclf.fit(X_train, y_train) \n  \n# You can print this to see all the prediction scores \nscores_pred = clf.decision_function(X_train)*-1\n  \ny_pred = clf.predict(X_train) \nn_errors = (y_pred != y_train).sum() \n# Counting the number of errors \n  \nprint('The number of prediction errors are ' + str(n_errors)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe number of prediction errors are 3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/home/tpriya/CS5525/MLBlog/env/lib/python3.10/site-packages/pyod/models/base.py:430: UserWarning: y should not be presented in unsupervised learning.\n  warnings.warn(\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nthreshold = stats.scoreatpercentile(scores_pred, 100 * outlier_fraction) \n  \n# decision function calculates the raw  \n# anomaly score for every point \nZ = clf.decision_function(np.c_[xx.ravel(), yy.ravel()]) * -1\nZ = Z.reshape(xx.shape) \n  \n# fill blue colormap from minimum anomaly \n# score to threshold value \nsubplot = plt.subplot(1, 2, 1) \nsubplot.contourf(xx, yy, Z, levels = np.linspace(Z.min(),  \n                  threshold, 10), cmap = plt.cm.Blues_r) \n  \n# draw red contour line where anomaly  \n# score is equal to threshold \na = subplot.contour(xx, yy, Z, levels =[threshold], \n                     linewidths = 2, colors ='red') \n  \n# fill orange contour lines where range of anomaly \n# score is from threshold to maximum anomaly score \nsubplot.contourf(xx, yy, Z, levels =[threshold, Z.max()], colors ='orange') \n  \n# scatter plot of inliers with white dots \nb = subplot.scatter(X_train[:-n_outliers, 0], X_train[:-n_outliers, 1], \n                                    c ='white', s = 20, edgecolor ='k')  \n  \n# scatter plot of outliers with black dots \nc = subplot.scatter(X_train[-n_outliers:, 0], X_train[-n_outliers:, 1],  \n                                    c ='black', s = 20, edgecolor ='k') \nsubplot.axis('tight') \n  \nsubplot.legend( \n    [a.collections[0], b, c], \n    ['learned decision function', 'true inliers', 'true outliers'], \n    prop = matplotlib.font_manager.FontProperties(size = 10), \n    loc ='lower right') \n  \nsubplot.set_title('K-Nearest Neighbours') \nsubplot.set_xlim((-10, 10)) \nsubplot.set_ylim((-10, 10)) \nplt.show()  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_22759/1166639198.py:33: MatplotlibDeprecationWarning: The collections attribute was deprecated in Matplotlib 3.8 and will be removed two minor releases later.\n  [a.collections[0], b, c],\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-2.png){width=314 height=431}\n:::\n:::\n\n\n**Anomaly Detection with real data:**\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport warnings\nimport seaborn as sns\n\nfrom sklearn.decomposition import PCA\nfrom sklearn.neighbors import NearestNeighbors\nfrom sklearn.cluster import DBSCAN\nfrom sklearn.cluster import KMeans\n\nfrom sklearn.mixture import GaussianMixture\nfrom sklearn.ensemble import IsolationForest\n\n\nfrom sklearn.metrics import silhouette_score\n\nwarnings.filterwarnings(\"ignore\")\n```\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ndf = pd.read_csv('/home/tpriya/CS5525/MLBlog/posts/outlier-detection/CC GENERAL.csv')\n\nprint('The shape of the dataset is:', df.shape)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe shape of the dataset is: (8950, 18)\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# check number of nulls in each column \ndf.isnull().sum().sort_values(ascending=False)\n# konw the ratio of null in each column \nround(df.isnull().sum(axis=0)*100/df.shape[0],2).sort_values(ascending=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\nMINIMUM_PAYMENTS                    3.50\nCREDIT_LIMIT                        0.01\nCUST_ID                             0.00\nBALANCE                             0.00\nPRC_FULL_PAYMENT                    0.00\nPAYMENTS                            0.00\nPURCHASES_TRX                       0.00\nCASH_ADVANCE_TRX                    0.00\nCASH_ADVANCE_FREQUENCY              0.00\nPURCHASES_INSTALLMENTS_FREQUENCY    0.00\nONEOFF_PURCHASES_FREQUENCY          0.00\nPURCHASES_FREQUENCY                 0.00\nCASH_ADVANCE                        0.00\nINSTALLMENTS_PURCHASES              0.00\nONEOFF_PURCHASES                    0.00\nPURCHASES                           0.00\nBALANCE_FREQUENCY                   0.00\nTENURE                              0.00\ndtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# save numeric columns and objects in separeted list to handle each one of them\nnumeric_columns = df.select_dtypes(exclude=['object']).columns.to_list() \nobject_columns = df.select_dtypes(include=['object']).columns.to_list()\n```\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\ndf[numeric_columns].hist(bins=15, figsize=(20,15))\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\narray([[<Axes: title={'center': 'BALANCE'}>,\n        <Axes: title={'center': 'BALANCE_FREQUENCY'}>,\n        <Axes: title={'center': 'PURCHASES'}>,\n        <Axes: title={'center': 'ONEOFF_PURCHASES'}>],\n       [<Axes: title={'center': 'INSTALLMENTS_PURCHASES'}>,\n        <Axes: title={'center': 'CASH_ADVANCE'}>,\n        <Axes: title={'center': 'PURCHASES_FREQUENCY'}>,\n        <Axes: title={'center': 'ONEOFF_PURCHASES_FREQUENCY'}>],\n       [<Axes: title={'center': 'PURCHASES_INSTALLMENTS_FREQUENCY'}>,\n        <Axes: title={'center': 'CASH_ADVANCE_FREQUENCY'}>,\n        <Axes: title={'center': 'CASH_ADVANCE_TRX'}>,\n        <Axes: title={'center': 'PURCHASES_TRX'}>],\n       [<Axes: title={'center': 'CREDIT_LIMIT'}>,\n        <Axes: title={'center': 'PAYMENTS'}>,\n        <Axes: title={'center': 'MINIMUM_PAYMENTS'}>,\n        <Axes: title={'center': 'PRC_FULL_PAYMENT'}>],\n       [<Axes: title={'center': 'TENURE'}>, <Axes: >, <Axes: >, <Axes: >]],\n      dtype=object)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-11-output-2.png){width=1552 height=1170}\n:::\n:::\n\n\n**Outliers:**\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nplt.subplots(figsize=(15, 15))\nplt.subplots_adjust(left=0.1, bottom=0.1, right=0.9, top=0.9, wspace=0.4, hspace=0.8)\n\nfor i, column in enumerate(numeric_columns, 1):\n    plt.subplot(7, 3, i)\n    sns.boxplot(df[column], orient='h')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-12-output-1.png){width=1222 height=1199}\n:::\n:::\n\n\n**Data Preprocessing:**\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\ndf_pre=df.copy()\ndf_pre.drop(object_columns, axis=1, inplace=True)\ndf_pre.head(3)\ncolumns_names = list(df_pre.columns)\ncolumns_names\n\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\n['BALANCE',\n 'BALANCE_FREQUENCY',\n 'PURCHASES',\n 'ONEOFF_PURCHASES',\n 'INSTALLMENTS_PURCHASES',\n 'CASH_ADVANCE',\n 'PURCHASES_FREQUENCY',\n 'ONEOFF_PURCHASES_FREQUENCY',\n 'PURCHASES_INSTALLMENTS_FREQUENCY',\n 'CASH_ADVANCE_FREQUENCY',\n 'CASH_ADVANCE_TRX',\n 'PURCHASES_TRX',\n 'CREDIT_LIMIT',\n 'PAYMENTS',\n 'MINIMUM_PAYMENTS',\n 'PRC_FULL_PAYMENT',\n 'TENURE']\n```\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nfrom sklearn.impute import SimpleImputer\ndf_NoNull = pd.DataFrame(SimpleImputer(strategy='median').fit_transform(df_pre), columns=columns_names)\ndf_NoNull \n\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>BALANCE</th>\n      <th>BALANCE_FREQUENCY</th>\n      <th>PURCHASES</th>\n      <th>ONEOFF_PURCHASES</th>\n      <th>INSTALLMENTS_PURCHASES</th>\n      <th>CASH_ADVANCE</th>\n      <th>PURCHASES_FREQUENCY</th>\n      <th>ONEOFF_PURCHASES_FREQUENCY</th>\n      <th>PURCHASES_INSTALLMENTS_FREQUENCY</th>\n      <th>CASH_ADVANCE_FREQUENCY</th>\n      <th>CASH_ADVANCE_TRX</th>\n      <th>PURCHASES_TRX</th>\n      <th>CREDIT_LIMIT</th>\n      <th>PAYMENTS</th>\n      <th>MINIMUM_PAYMENTS</th>\n      <th>PRC_FULL_PAYMENT</th>\n      <th>TENURE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40.900749</td>\n      <td>0.818182</td>\n      <td>95.40</td>\n      <td>0.00</td>\n      <td>95.40</td>\n      <td>0.000000</td>\n      <td>0.166667</td>\n      <td>0.000000</td>\n      <td>0.083333</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>1000.0</td>\n      <td>201.802084</td>\n      <td>139.509787</td>\n      <td>0.000000</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3202.467416</td>\n      <td>0.909091</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>6442.945483</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.250000</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>7000.0</td>\n      <td>4103.032597</td>\n      <td>1072.340217</td>\n      <td>0.222222</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2495.148862</td>\n      <td>1.000000</td>\n      <td>773.17</td>\n      <td>773.17</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>7500.0</td>\n      <td>622.066742</td>\n      <td>627.284787</td>\n      <td>0.000000</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1666.670542</td>\n      <td>0.636364</td>\n      <td>1499.00</td>\n      <td>1499.00</td>\n      <td>0.00</td>\n      <td>205.788017</td>\n      <td>0.083333</td>\n      <td>0.083333</td>\n      <td>0.000000</td>\n      <td>0.083333</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>7500.0</td>\n      <td>0.000000</td>\n      <td>312.343947</td>\n      <td>0.000000</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>817.714335</td>\n      <td>1.000000</td>\n      <td>16.00</td>\n      <td>16.00</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>0.083333</td>\n      <td>0.083333</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1200.0</td>\n      <td>678.334763</td>\n      <td>244.791237</td>\n      <td>0.000000</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8945</th>\n      <td>28.493517</td>\n      <td>1.000000</td>\n      <td>291.12</td>\n      <td>0.00</td>\n      <td>291.12</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.833333</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>1000.0</td>\n      <td>325.594462</td>\n      <td>48.886365</td>\n      <td>0.500000</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>8946</th>\n      <td>19.183215</td>\n      <td>1.000000</td>\n      <td>300.00</td>\n      <td>0.00</td>\n      <td>300.00</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.833333</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>6.0</td>\n      <td>1000.0</td>\n      <td>275.861322</td>\n      <td>312.343947</td>\n      <td>0.000000</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>8947</th>\n      <td>23.398673</td>\n      <td>0.833333</td>\n      <td>144.40</td>\n      <td>0.00</td>\n      <td>144.40</td>\n      <td>0.000000</td>\n      <td>0.833333</td>\n      <td>0.000000</td>\n      <td>0.666667</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>1000.0</td>\n      <td>81.270775</td>\n      <td>82.418369</td>\n      <td>0.250000</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>8948</th>\n      <td>13.457564</td>\n      <td>0.833333</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>36.558778</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.166667</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>500.0</td>\n      <td>52.549959</td>\n      <td>55.755628</td>\n      <td>0.250000</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>8949</th>\n      <td>372.708075</td>\n      <td>0.666667</td>\n      <td>1093.25</td>\n      <td>1093.25</td>\n      <td>0.00</td>\n      <td>127.040008</td>\n      <td>0.666667</td>\n      <td>0.666667</td>\n      <td>0.000000</td>\n      <td>0.333333</td>\n      <td>2.0</td>\n      <td>23.0</td>\n      <td>1200.0</td>\n      <td>63.165404</td>\n      <td>88.288956</td>\n      <td>0.000000</td>\n      <td>6.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>8950 rows × 17 columns</p>\n</div>\n```\n:::\n:::\n\n\n**Log Transform for handling outliers:**\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n# will add 1 to all values because log transform get error for numbers between 0 and 1\ndf_pre2 = (df_NoNull + 1) \ndf_log = np.log(df_pre2)\ndf_log.describe().T\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>BALANCE</th>\n      <td>8950.0</td>\n      <td>6.161637</td>\n      <td>2.013303</td>\n      <td>0.000000</td>\n      <td>4.861995</td>\n      <td>6.773521</td>\n      <td>7.628099</td>\n      <td>9.854515</td>\n    </tr>\n    <tr>\n      <th>BALANCE_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>0.619940</td>\n      <td>0.148590</td>\n      <td>0.000000</td>\n      <td>0.635989</td>\n      <td>0.693147</td>\n      <td>0.693147</td>\n      <td>0.693147</td>\n    </tr>\n    <tr>\n      <th>PURCHASES</th>\n      <td>8950.0</td>\n      <td>4.899647</td>\n      <td>2.916872</td>\n      <td>0.000000</td>\n      <td>3.704627</td>\n      <td>5.892417</td>\n      <td>7.013133</td>\n      <td>10.800403</td>\n    </tr>\n    <tr>\n      <th>ONEOFF_PURCHASES</th>\n      <td>8950.0</td>\n      <td>3.204274</td>\n      <td>3.246365</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>3.663562</td>\n      <td>6.360274</td>\n      <td>10.615512</td>\n    </tr>\n    <tr>\n      <th>INSTALLMENTS_PURCHASES</th>\n      <td>8950.0</td>\n      <td>3.352403</td>\n      <td>3.082973</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>4.499810</td>\n      <td>6.151961</td>\n      <td>10.021315</td>\n    </tr>\n    <tr>\n      <th>CASH_ADVANCE</th>\n      <td>8950.0</td>\n      <td>3.319086</td>\n      <td>3.566298</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>7.016449</td>\n      <td>10.760839</td>\n    </tr>\n    <tr>\n      <th>PURCHASES_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>0.361268</td>\n      <td>0.277317</td>\n      <td>0.000000</td>\n      <td>0.080042</td>\n      <td>0.405465</td>\n      <td>0.650588</td>\n      <td>0.693147</td>\n    </tr>\n    <tr>\n      <th>ONEOFF_PURCHASES_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>0.158699</td>\n      <td>0.216672</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.080042</td>\n      <td>0.262364</td>\n      <td>0.693147</td>\n    </tr>\n    <tr>\n      <th>PURCHASES_INSTALLMENTS_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>0.270072</td>\n      <td>0.281852</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.154151</td>\n      <td>0.559616</td>\n      <td>0.693147</td>\n    </tr>\n    <tr>\n      <th>CASH_ADVANCE_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>0.113512</td>\n      <td>0.156716</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.200671</td>\n      <td>0.916291</td>\n    </tr>\n    <tr>\n      <th>CASH_ADVANCE_TRX</th>\n      <td>8950.0</td>\n      <td>0.817570</td>\n      <td>1.009316</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.609438</td>\n      <td>4.820282</td>\n    </tr>\n    <tr>\n      <th>PURCHASES_TRX</th>\n      <td>8950.0</td>\n      <td>1.894731</td>\n      <td>1.373856</td>\n      <td>0.000000</td>\n      <td>0.693147</td>\n      <td>2.079442</td>\n      <td>2.890372</td>\n      <td>5.883322</td>\n    </tr>\n    <tr>\n      <th>CREDIT_LIMIT</th>\n      <td>8950.0</td>\n      <td>8.094825</td>\n      <td>0.819629</td>\n      <td>3.931826</td>\n      <td>7.378384</td>\n      <td>8.006701</td>\n      <td>8.779711</td>\n      <td>10.308986</td>\n    </tr>\n    <tr>\n      <th>PAYMENTS</th>\n      <td>8950.0</td>\n      <td>6.624540</td>\n      <td>1.591763</td>\n      <td>0.000000</td>\n      <td>5.951361</td>\n      <td>6.754489</td>\n      <td>7.550732</td>\n      <td>10.834125</td>\n    </tr>\n    <tr>\n      <th>MINIMUM_PAYMENTS</th>\n      <td>8950.0</td>\n      <td>5.916079</td>\n      <td>1.169929</td>\n      <td>0.018982</td>\n      <td>5.146667</td>\n      <td>5.747301</td>\n      <td>6.671670</td>\n      <td>11.243832</td>\n    </tr>\n    <tr>\n      <th>PRC_FULL_PAYMENT</th>\n      <td>8950.0</td>\n      <td>0.117730</td>\n      <td>0.211617</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.133531</td>\n      <td>0.693147</td>\n    </tr>\n    <tr>\n      <th>TENURE</th>\n      <td>8950.0</td>\n      <td>2.519680</td>\n      <td>0.130367</td>\n      <td>1.945910</td>\n      <td>2.564949</td>\n      <td>2.564949</td>\n      <td>2.564949</td>\n      <td>2.564949</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nf, axs = plt.subplots(figsize=(15, 15))\nplt.subplots_adjust(left=0.1, bottom=0.1, right=0.9, top=0.9, wspace=0.4, hspace=0.8)\n\nfor i, column in enumerate(df_log.columns, 1):\n    plt.subplot(7, 3, i)\n    sns.boxplot(df_log[column], orient='h')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-16-output-1.png){width=1212 height=1199}\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\ndf_pre2 = df_NoNull.copy()\n```\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import QuantileTransformer\nfrom sklearn.preprocessing import PowerTransformer \ndf_power = PowerTransformer(method=\"yeo-johnson\").fit_transform(df_pre2)\n```\n:::\n\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\ndf_power= pd.DataFrame(df_power, columns=columns_names)\ndf_power.describe().T\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>BALANCE</th>\n      <td>8950.0</td>\n      <td>-4.445854e-17</td>\n      <td>1.000056</td>\n      <td>-2.120305</td>\n      <td>-0.816807</td>\n      <td>0.151681</td>\n      <td>0.717913</td>\n      <td>2.731227</td>\n    </tr>\n    <tr>\n      <th>BALANCE_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>-4.699903e-16</td>\n      <td>1.000056</td>\n      <td>-1.997716</td>\n      <td>-0.598992</td>\n      <td>0.628612</td>\n      <td>0.628612</td>\n      <td>0.628612</td>\n    </tr>\n    <tr>\n      <th>PURCHASES</th>\n      <td>8950.0</td>\n      <td>1.238488e-16</td>\n      <td>1.000056</td>\n      <td>-1.505149</td>\n      <td>-0.654799</td>\n      <td>0.160770</td>\n      <td>0.710251</td>\n      <td>3.559070</td>\n    </tr>\n    <tr>\n      <th>ONEOFF_PURCHASES</th>\n      <td>8950.0</td>\n      <td>6.986342e-17</td>\n      <td>1.000056</td>\n      <td>-1.000488</td>\n      <td>-1.000488</td>\n      <td>0.237516</td>\n      <td>0.990945</td>\n      <td>1.959134</td>\n    </tr>\n    <tr>\n      <th>INSTALLMENTS_PURCHASES</th>\n      <td>8950.0</td>\n      <td>7.343598e-17</td>\n      <td>1.000056</td>\n      <td>-1.085422</td>\n      <td>-1.085422</td>\n      <td>0.361196</td>\n      <td>0.906100</td>\n      <td>2.212015</td>\n    </tr>\n    <tr>\n      <th>CASH_ADVANCE</th>\n      <td>8950.0</td>\n      <td>1.381390e-16</td>\n      <td>1.000056</td>\n      <td>-0.944538</td>\n      <td>-0.944538</td>\n      <td>-0.944538</td>\n      <td>1.059052</td>\n      <td>1.729923</td>\n    </tr>\n    <tr>\n      <th>PURCHASES_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>6.668781e-17</td>\n      <td>1.000056</td>\n      <td>-1.278866</td>\n      <td>-1.015926</td>\n      <td>0.119657</td>\n      <td>1.050283</td>\n      <td>1.218860</td>\n    </tr>\n    <tr>\n      <th>ONEOFF_PURCHASES_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>-2.540488e-17</td>\n      <td>1.000056</td>\n      <td>-0.903315</td>\n      <td>-0.903315</td>\n      <td>-0.092230</td>\n      <td>0.978077</td>\n      <td>1.732554</td>\n    </tr>\n    <tr>\n      <th>PURCHASES_INSTALLMENTS_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>-7.462683e-17</td>\n      <td>1.000056</td>\n      <td>-1.004445</td>\n      <td>-1.004445</td>\n      <td>-0.273845</td>\n      <td>1.069884</td>\n      <td>1.377136</td>\n    </tr>\n    <tr>\n      <th>CASH_ADVANCE_FREQUENCY</th>\n      <td>8950.0</td>\n      <td>-9.804696e-17</td>\n      <td>1.000056</td>\n      <td>-0.883204</td>\n      <td>-0.883204</td>\n      <td>-0.883204</td>\n      <td>1.016910</td>\n      <td>1.902718</td>\n    </tr>\n    <tr>\n      <th>CASH_ADVANCE_TRX</th>\n      <td>8950.0</td>\n      <td>-1.254366e-16</td>\n      <td>1.000056</td>\n      <td>-0.905801</td>\n      <td>-0.905801</td>\n      <td>-0.905801</td>\n      <td>1.044342</td>\n      <td>1.921254</td>\n    </tr>\n    <tr>\n      <th>PURCHASES_TRX</th>\n      <td>8950.0</td>\n      <td>-2.889805e-16</td>\n      <td>1.000056</td>\n      <td>-1.387624</td>\n      <td>-0.872718</td>\n      <td>0.143257</td>\n      <td>0.729118</td>\n      <td>2.838620</td>\n    </tr>\n    <tr>\n      <th>CREDIT_LIMIT</th>\n      <td>8950.0</td>\n      <td>-4.826927e-16</td>\n      <td>1.000056</td>\n      <td>-4.573150</td>\n      <td>-0.880590</td>\n      <td>-0.129660</td>\n      <td>0.830085</td>\n      <td>2.851804</td>\n    </tr>\n    <tr>\n      <th>PAYMENTS</th>\n      <td>8950.0</td>\n      <td>-5.716098e-17</td>\n      <td>1.000056</td>\n      <td>-2.782085</td>\n      <td>-0.608905</td>\n      <td>-0.064284</td>\n      <td>0.569453</td>\n      <td>4.568553</td>\n    </tr>\n    <tr>\n      <th>MINIMUM_PAYMENTS</th>\n      <td>8950.0</td>\n      <td>-6.668781e-16</td>\n      <td>1.000056</td>\n      <td>-5.869902</td>\n      <td>-0.643745</td>\n      <td>-0.115812</td>\n      <td>0.665890</td>\n      <td>4.036562</td>\n    </tr>\n    <tr>\n      <th>PRC_FULL_PAYMENT</th>\n      <td>8950.0</td>\n      <td>-6.986342e-17</td>\n      <td>1.000056</td>\n      <td>-0.677889</td>\n      <td>-0.677889</td>\n      <td>-0.677889</td>\n      <td>0.854117</td>\n      <td>1.873638</td>\n    </tr>\n    <tr>\n      <th>TENURE</th>\n      <td>8950.0</td>\n      <td>7.621464e-16</td>\n      <td>1.000056</td>\n      <td>-2.526612</td>\n      <td>0.422252</td>\n      <td>0.422252</td>\n      <td>0.422252</td>\n      <td>0.422252</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\nf, axs = plt.subplots(figsize=(15, 15))\nplt.subplots_adjust(left=0.1, bottom=0.1, right=0.9, top=0.9, wspace=0.4, hspace=0.8)\n\nfor i, column in enumerate(df_power.columns, 1):\n    plt.subplot(7, 3, i)\n    sns.boxplot(df_power[column], orient='h')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-20-output-1.png){width=1212 height=1199}\n:::\n:::\n\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\ndf_power.hist(bins=20, figsize=(20,15))\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\narray([[<Axes: title={'center': 'BALANCE'}>,\n        <Axes: title={'center': 'BALANCE_FREQUENCY'}>,\n        <Axes: title={'center': 'PURCHASES'}>,\n        <Axes: title={'center': 'ONEOFF_PURCHASES'}>],\n       [<Axes: title={'center': 'INSTALLMENTS_PURCHASES'}>,\n        <Axes: title={'center': 'CASH_ADVANCE'}>,\n        <Axes: title={'center': 'PURCHASES_FREQUENCY'}>,\n        <Axes: title={'center': 'ONEOFF_PURCHASES_FREQUENCY'}>],\n       [<Axes: title={'center': 'PURCHASES_INSTALLMENTS_FREQUENCY'}>,\n        <Axes: title={'center': 'CASH_ADVANCE_FREQUENCY'}>,\n        <Axes: title={'center': 'CASH_ADVANCE_TRX'}>,\n        <Axes: title={'center': 'PURCHASES_TRX'}>],\n       [<Axes: title={'center': 'CREDIT_LIMIT'}>,\n        <Axes: title={'center': 'PAYMENTS'}>,\n        <Axes: title={'center': 'MINIMUM_PAYMENTS'}>,\n        <Axes: title={'center': 'PRC_FULL_PAYMENT'}>],\n       [<Axes: title={'center': 'TENURE'}>, <Axes: >, <Axes: >, <Axes: >]],\n      dtype=object)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-21-output-2.png){width=1561 height=1170}\n:::\n:::\n\n\n**Feature Transform**\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import MaxAbsScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import StandardScaler\n```\n:::\n\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\nscale_MinMax = MinMaxScaler()\ndf_transformed = pd.DataFrame(scale_MinMax.fit_transform(df_NoNull), columns=columns_names)\nscale_MinMax = MinMaxScaler()\ndf_transformed_Log = pd.DataFrame(scale_MinMax.fit_transform(df_log), columns=columns_names)\nscale_MinMax = MinMaxScaler()\ndf_transformed_Power = pd.DataFrame(scale_MinMax.fit_transform(df_power), columns=columns_names)\nscale_Standard = StandardScaler()\ndf_transformed_Power = pd.DataFrame(scale_Standard.fit_transform(df_power), columns=columns_names)\ndf_log.to_csv(\"./Data_Log.csv\",index=False)\n```\n:::\n\n\n#### **Data with Log Transformation to Clustering and Anomaly detection**\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\ndf_transformed = pd.read_csv('/home/tpriya/CS5525/MLBlog/posts/outlier-detection/Data_Log.csv')\ndf_transformed\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>BALANCE</th>\n      <th>BALANCE_FREQUENCY</th>\n      <th>PURCHASES</th>\n      <th>ONEOFF_PURCHASES</th>\n      <th>INSTALLMENTS_PURCHASES</th>\n      <th>CASH_ADVANCE</th>\n      <th>PURCHASES_FREQUENCY</th>\n      <th>ONEOFF_PURCHASES_FREQUENCY</th>\n      <th>PURCHASES_INSTALLMENTS_FREQUENCY</th>\n      <th>CASH_ADVANCE_FREQUENCY</th>\n      <th>CASH_ADVANCE_TRX</th>\n      <th>PURCHASES_TRX</th>\n      <th>CREDIT_LIMIT</th>\n      <th>PAYMENTS</th>\n      <th>MINIMUM_PAYMENTS</th>\n      <th>PRC_FULL_PAYMENT</th>\n      <th>TENURE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.735304</td>\n      <td>0.597837</td>\n      <td>4.568506</td>\n      <td>0.000000</td>\n      <td>4.568506</td>\n      <td>0.000000</td>\n      <td>0.154151</td>\n      <td>0.000000</td>\n      <td>0.080042</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.098612</td>\n      <td>6.908755</td>\n      <td>5.312231</td>\n      <td>4.945277</td>\n      <td>0.000000</td>\n      <td>2.564949</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>8.071989</td>\n      <td>0.646627</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>8.770896</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.223144</td>\n      <td>1.609438</td>\n      <td>0.000000</td>\n      <td>8.853808</td>\n      <td>8.319725</td>\n      <td>6.978531</td>\n      <td>0.200671</td>\n      <td>2.564949</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.822504</td>\n      <td>0.693147</td>\n      <td>6.651791</td>\n      <td>6.651791</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.693147</td>\n      <td>0.693147</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>2.564949</td>\n      <td>8.922792</td>\n      <td>6.434654</td>\n      <td>6.442994</td>\n      <td>0.000000</td>\n      <td>2.564949</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7.419183</td>\n      <td>0.492477</td>\n      <td>7.313220</td>\n      <td>7.313220</td>\n      <td>0.000000</td>\n      <td>5.331694</td>\n      <td>0.080042</td>\n      <td>0.080042</td>\n      <td>0.000000</td>\n      <td>0.080042</td>\n      <td>0.693147</td>\n      <td>0.693147</td>\n      <td>8.922792</td>\n      <td>0.000000</td>\n      <td>5.747301</td>\n      <td>0.000000</td>\n      <td>2.564949</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6.707735</td>\n      <td>0.693147</td>\n      <td>2.833213</td>\n      <td>2.833213</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.080042</td>\n      <td>0.080042</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.693147</td>\n      <td>7.090910</td>\n      <td>6.521114</td>\n      <td>5.504483</td>\n      <td>0.000000</td>\n      <td>2.564949</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8945</th>\n      <td>3.384170</td>\n      <td>0.693147</td>\n      <td>5.677165</td>\n      <td>0.000000</td>\n      <td>5.677165</td>\n      <td>0.000000</td>\n      <td>0.693147</td>\n      <td>0.000000</td>\n      <td>0.606136</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.945910</td>\n      <td>6.908755</td>\n      <td>5.788719</td>\n      <td>3.909748</td>\n      <td>0.405465</td>\n      <td>1.945910</td>\n    </tr>\n    <tr>\n      <th>8946</th>\n      <td>3.004851</td>\n      <td>0.693147</td>\n      <td>5.707110</td>\n      <td>0.000000</td>\n      <td>5.707110</td>\n      <td>0.000000</td>\n      <td>0.693147</td>\n      <td>0.000000</td>\n      <td>0.606136</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.945910</td>\n      <td>6.908755</td>\n      <td>5.623517</td>\n      <td>5.747301</td>\n      <td>0.000000</td>\n      <td>1.945910</td>\n    </tr>\n    <tr>\n      <th>8947</th>\n      <td>3.194529</td>\n      <td>0.606136</td>\n      <td>4.979489</td>\n      <td>0.000000</td>\n      <td>4.979489</td>\n      <td>0.000000</td>\n      <td>0.606136</td>\n      <td>0.000000</td>\n      <td>0.510826</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.791759</td>\n      <td>6.908755</td>\n      <td>4.410016</td>\n      <td>4.423869</td>\n      <td>0.223144</td>\n      <td>1.945910</td>\n    </tr>\n    <tr>\n      <th>8948</th>\n      <td>2.671218</td>\n      <td>0.606136</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>3.625907</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.154151</td>\n      <td>1.098612</td>\n      <td>0.000000</td>\n      <td>6.216606</td>\n      <td>3.980615</td>\n      <td>4.038755</td>\n      <td>0.223144</td>\n      <td>1.945910</td>\n    </tr>\n    <tr>\n      <th>8949</th>\n      <td>5.923475</td>\n      <td>0.510826</td>\n      <td>6.997824</td>\n      <td>6.997824</td>\n      <td>0.000000</td>\n      <td>4.852343</td>\n      <td>0.510826</td>\n      <td>0.510826</td>\n      <td>0.000000</td>\n      <td>0.287682</td>\n      <td>1.098612</td>\n      <td>3.178054</td>\n      <td>7.090910</td>\n      <td>4.161464</td>\n      <td>4.491878</td>\n      <td>0.000000</td>\n      <td>1.945910</td>\n    </tr>\n  </tbody>\n</table>\n<p>8950 rows × 17 columns</p>\n</div>\n```\n:::\n:::\n\n\n**Clustering**\n\n::: {.cell execution_count=24}\n``` {.python .cell-code}\n# To plot Elbow With Inertia \ninertia = []\nRange = [*range(1,11)]\n\nfor k in Range: \n    kmean = KMeans(n_clusters=k, max_iter=300, random_state=42)\n    kmean.fit(df_transformed)\n    inertia.append(kmean.inertia_)\n    \nplt.figure(figsize=(10,4))\nplt.plot(Range, inertia, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Inertia')\nplt.title('The Elbow Method ')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-25-output-1.png){width=842 height=376}\n:::\n:::\n\n\n::: {.cell execution_count=25}\n``` {.python .cell-code}\ndrop_variation = []\ndrop_variation.append(0) #add 0 in the first element \n\nfor i in range(len(inertia) -1):\n    dropValue = inertia[i] - inertia[i+1]\n    drop_variation.append(dropValue) \n\n# select suitable k that have large drop in the variation\nk = Range[np.argmax(drop_variation)]\nprint(\"Suitable number of clusters = \",k)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSuitable number of clusters =  2\n```\n:::\n:::\n\n\n::: {.cell execution_count=26}\n``` {.python .cell-code}\nfrom sklearn.cluster import KMeans\n\nkmeans = KMeans(n_clusters=4, random_state=42).fit(df_transformed)\n\nlabels = kmeans.labels_\niner = kmeans.inertia_\ncent = kmeans.cluster_centers_\n\nprint(\"\\t~~ THIS RESULT OF K-mean SKLEARN  ~~\")\nprint('~'*50)\nprint(\"sum of elements that contain in cluster 0 :\",(labels == 0).sum())\nprint(\"sum of elements that contain in cluster 1 :\",(labels == 1).sum())\nprint(\"sum of elements that contain in cluster 2 :\",(labels == 2).sum())\nprint(\"sum of elements that contain in cluster 3 :\",(labels == 3).sum())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\t~~ THIS RESULT OF K-mean SKLEARN  ~~\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nsum of elements that contain in cluster 0 : 2086\nsum of elements that contain in cluster 1 : 2133\nsum of elements that contain in cluster 2 : 1976\nsum of elements that contain in cluster 3 : 2755\n```\n:::\n:::\n\n\n::: {.cell execution_count=27}\n``` {.python .cell-code}\nfrom yellowbrick.cluster import SilhouetteVisualizer\nfrom sklearn.metrics import silhouette_score\n```\n:::\n\n\n::: {.cell execution_count=28}\n``` {.python .cell-code}\nscore = silhouette_score(df_transformed,  labels, metric='euclidean')\nprint('Silhouett Score: %.3f' % score)\nvisualizer = SilhouetteVisualizer(kmeans, colors='yellowbrick')\n\nvisualizer.fit(df_transformed)\nvisualizer.show()  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSilhouett Score: 0.400\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-29-output-2.png){width=660 height=487}\n:::\n\n::: {.cell-output .cell-output-display execution_count=28}\n```\n<Axes: title={'center': 'Silhouette Plot of KMeans Clustering for 8950 Samples in 4 Centers'}, xlabel='silhouette coefficient values', ylabel='cluster label'>\n```\n:::\n:::\n\n\n::: {.cell execution_count=29}\n``` {.python .cell-code}\nfrom sklearn.decomposition import KernelPCA\nkpca = KernelPCA(n_components=10, kernel='rbf')\ndf_kpca = pd.DataFrame(kpca.fit_transform(df_transformed))\ndf_kpca\n```\n\n::: {.cell-output .cell-output-display execution_count=29}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>-0.322024</td>\n      <td>0.516047</td>\n      <td>0.085217</td>\n      <td>0.036215</td>\n      <td>-0.015608</td>\n      <td>-0.013188</td>\n      <td>-0.345512</td>\n      <td>0.052362</td>\n      <td>0.067164</td>\n      <td>0.204233</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.571038</td>\n      <td>0.078448</td>\n      <td>0.114536</td>\n      <td>0.005173</td>\n      <td>-0.033539</td>\n      <td>0.586146</td>\n      <td>-0.004310</td>\n      <td>0.012051</td>\n      <td>0.002466</td>\n      <td>0.001755</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-0.097995</td>\n      <td>-0.181926</td>\n      <td>-0.298064</td>\n      <td>0.500376</td>\n      <td>-0.085155</td>\n      <td>0.017446</td>\n      <td>0.030665</td>\n      <td>0.070862</td>\n      <td>-0.147242</td>\n      <td>0.267388</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-0.031012</td>\n      <td>-0.038757</td>\n      <td>-0.127563</td>\n      <td>-0.017882</td>\n      <td>0.049901</td>\n      <td>-0.002018</td>\n      <td>0.004615</td>\n      <td>0.049781</td>\n      <td>0.032890</td>\n      <td>-0.013316</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-0.042195</td>\n      <td>-0.045667</td>\n      <td>-0.203879</td>\n      <td>0.215753</td>\n      <td>-0.010849</td>\n      <td>-0.072370</td>\n      <td>0.016403</td>\n      <td>0.047356</td>\n      <td>0.017663</td>\n      <td>0.074450</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8945</th>\n      <td>-0.376092</td>\n      <td>0.612240</td>\n      <td>0.150075</td>\n      <td>0.016713</td>\n      <td>-0.014451</td>\n      <td>0.003618</td>\n      <td>-0.282473</td>\n      <td>0.008226</td>\n      <td>-0.007720</td>\n      <td>0.018540</td>\n    </tr>\n    <tr>\n      <th>8946</th>\n      <td>-0.373469</td>\n      <td>0.605441</td>\n      <td>0.145621</td>\n      <td>0.015209</td>\n      <td>-0.013303</td>\n      <td>0.002802</td>\n      <td>-0.247563</td>\n      <td>0.017263</td>\n      <td>-0.006531</td>\n      <td>0.050644</td>\n    </tr>\n    <tr>\n      <th>8947</th>\n      <td>-0.326389</td>\n      <td>0.532047</td>\n      <td>0.093867</td>\n      <td>0.027570</td>\n      <td>-0.015974</td>\n      <td>-0.005210</td>\n      <td>-0.444072</td>\n      <td>0.050256</td>\n      <td>0.070342</td>\n      <td>0.165628</td>\n    </tr>\n    <tr>\n      <th>8948</th>\n      <td>0.052839</td>\n      <td>-0.013372</td>\n      <td>-0.091298</td>\n      <td>-0.008970</td>\n      <td>0.022265</td>\n      <td>-0.223196</td>\n      <td>-0.010937</td>\n      <td>0.064317</td>\n      <td>0.052705</td>\n      <td>-0.028263</td>\n    </tr>\n    <tr>\n      <th>8949</th>\n      <td>-0.046451</td>\n      <td>-0.076523</td>\n      <td>-0.235957</td>\n      <td>0.025098</td>\n      <td>0.191674</td>\n      <td>0.006375</td>\n      <td>-0.012778</td>\n      <td>-0.017814</td>\n      <td>-0.028892</td>\n      <td>-0.009289</td>\n    </tr>\n  </tbody>\n</table>\n<p>8950 rows × 10 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=30}\n``` {.python .cell-code}\nfrom sklearn.ensemble import IsolationForest\nclf = IsolationForest(random_state=0, \n                      max_features=2,\n                      n_estimators=100,\n                      contamination=0.1).fit(df_kpca)\n\nanom_pred = clf.predict(df_kpca)\nanom_pred\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\narray([1, 1, 1, ..., 1, 1, 1])\n```\n:::\n:::\n\n\n::: {.cell execution_count=31}\n``` {.python .cell-code}\nfrom sklearn.manifold import TSNE\ntsne = TSNE(n_components=2, \n            perplexity=50,  \n            random_state=42,\n            n_iter=300).fit_transform(df_transformed)\n```\n:::\n\n\n::: {.cell execution_count=32}\n``` {.python .cell-code}\ndf_embed_Iso = pd.DataFrame(tsne, columns=['feature1', 'feature2'])\ndf_embed_Iso['Labels']= pd.DataFrame(anom_pred)\ndf_embed_Iso\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>feature1</th>\n      <th>feature2</th>\n      <th>Labels</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.407689</td>\n      <td>-5.521269</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-5.836224</td>\n      <td>2.789712</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.094771</td>\n      <td>3.217455</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-1.684396</td>\n      <td>6.508462</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3.838952</td>\n      <td>4.256968</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8945</th>\n      <td>0.704921</td>\n      <td>-7.746036</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8946</th>\n      <td>0.093061</td>\n      <td>-7.773806</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8947</th>\n      <td>-0.642122</td>\n      <td>-5.856036</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8948</th>\n      <td>-5.276070</td>\n      <td>-6.167468</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8949</th>\n      <td>-2.545392</td>\n      <td>7.006695</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>8950 rows × 3 columns</p>\n</div>\n```\n:::\n:::\n\n\n**TSNE Visualization**\n\n::: {.cell execution_count=33}\n``` {.python .cell-code}\nplt.figure(figsize=(9,5))\nsns.scatterplot(\n    x='feature1', y='feature2',\n    data=df_embed_Iso,    \n    hue=df_embed_Iso['Labels'],\n    palette=sns.color_palette(\"hls\", 2)\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```\n<Axes: xlabel='feature1', ylabel='feature2'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-34-output-2.png){width=740 height=430}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}